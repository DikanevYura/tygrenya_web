'use client';

import type { FC } from 'react';
import React, { useState } from 'react';

import Accordion from '@/components/Accordion';
import { cn } from '@/libs/cn';

const mockFreqQuestions = [
  {
    id: 1,
    title: '–©–æ —Ç–∞–∫–µ –ê–í–ê-—Ç–µ—Ä–∞–ø—ñ—è?',
    content:
      '–ê–í–ê-—Ç–µ—Ä–∞–ø—ñ—è, –∞–±–æ –ø—Ä–∏–∫–ª–∞–¥–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ –ø–æ–≤–µ–¥—ñ–Ω–∫–∏ (Applied Behavioral Analysis), —î –æ–¥–Ω–∏–º —ñ–∑ –ø—Ä–æ–≤—ñ–¥–Ω–∏—Ö –º–µ—Ç–æ–¥—ñ–≤ –∫–æ—Ä–µ–∫—Ü—ñ—ó –ø–æ–≤–µ–¥—ñ–Ω–∫–∏, –æ—Å–æ–±–ª–∏–≤–æ –¥–ª—è –¥—ñ—Ç–µ–π –∑ —Ä–æ–∑–ª–∞–¥–∞–º–∏ –∞—É—Ç–∏—Å—Ç–∏—á–Ω–æ–≥–æ —Å–ø–µ–∫—Ç—Ä–∞ (–†–ê–°). –¶—è –º–µ—Ç–æ–¥–∏–∫–∞ —Ñ–æ–∫—É—Å—É—î—Ç—å—Å—è –Ω–∞ –∑–º—ñ–Ω—ñ –ø–æ–≤–µ–¥—ñ–Ω–∫–∏ —á–µ—Ä–µ–∑ –ø–æ–∑–∏—Ç–∏–≤–Ω–µ –ø—ñ–¥–∫—Ä—ñ–ø–ª–µ–Ω–Ω—è, —â–æ –¥–æ–∑–≤–æ–ª—è—î –¥—ñ—Ç—è–º –Ω–∞–≤—á–∞—Ç–∏—Å—è –∞–¥–∞–ø—Ç–∏–≤–Ω–∏–º –Ω–∞–≤–∏—á–∫–∞–º —Ç–∞ –∑–º–µ–Ω—à—É–≤–∞—Ç–∏ –Ω–µ–±–∞–∂–∞–Ω—É –ø–æ–≤–µ–¥—ñ–Ω–∫—É.',
  },
  {
    id: 2,
    title:
      '–Ø–∫ —Ä–∞–Ω–Ω—î –≤—Ç—Ä—É—á–∞–Ω–Ω—è –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –ê–í–ê-—Ç–µ—Ä–∞–ø—ñ—ó –≤–ø–ª–∏–≤–∞—î –Ω–∞ —Å–æ—Ü—ñ–∞–ª—å–Ω—É —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—é —Ç–∞ —Å–∞–º–æ—Å—Ç—ñ–π–Ω—ñ—Å—Ç—å –¥—ñ—Ç–µ–π –∑ –∞—É—Ç–∏–∑–º–æ–º?',
    content:
      '–î–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è –ø–æ–∫–∞–∑—É—é—Ç—å, —â–æ —Ä–∞–Ω–Ω—î –≤—Ç—Ä—É—á–∞–Ω–Ω—è —á–µ—Ä–µ–∑ –ê–í–ê-—Ç–µ—Ä–∞–ø—ñ—é –º–æ–∂–µ –∑–Ω–∞—á–Ω–æ –ø–æ–∫—Ä–∞—â–∏—Ç–∏ —è–∫—ñ—Å—Ç—å –∂–∏—Ç—Ç—è –¥—ñ—Ç–µ–π –∑ –∞—É—Ç–∏–∑–º–æ–º, –¥–æ–ø–æ–º–∞–≥–∞—é—á–∏ —ó–º —ñ–Ω—Ç–µ–≥—Ä—É–≤–∞—Ç–∏—Å—è –≤ —Å—É—Å–ø—ñ–ª—å—Å—Ç–≤–æ —Ç–∞ —Å—Ç–∞—Ç–∏ –±—ñ–ª—å—à —Å–∞–º–æ—Å—Ç—ñ–π–Ω–∏–º–∏.',
  },
  // {
  //   id: 3,
  //   title:
  //     '–Ø –∑–º–æ–∂—É —â–æ—Å—å –∑—Ä–æ–∑—É–º—ñ—Ç–∏ –∑ –Ω–∞–≤—á–∞–Ω–Ω—è, —è–∫—â–æ –º–æ—ó—Ö –∑–Ω–∞–Ω—å –ø—Ä–æ –≤–∏—à–∏–≤–∞–Ω–Ω—è –∑–∞—Ä–∞–∑ –¥—É–∂–µ –º–∞–ª–æ?',
  //   content:
  //     '–û–¥–Ω–æ–∑–Ω–∞—á–Ω–æ! –ú—ñ–Ω—ñ-–∫—É—Ä—Å ¬´–û–ª–∏–≤–∫–æ–≤–∞ –≤–∏—à–∏–≤–∞–Ω–∫–∞¬ª –æ—Ä—ñ—î–Ω—Ç–æ–≤–∞–Ω–∏–π –Ω–∞ –ª—é–¥–µ–π –∑ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–º, –∞–±–æ –≤–∑–∞–≥–∞–ª—ñ –≤—ñ–¥—Å—É—Ç–Ω—ñ–º –¥–æ—Å–≤—ñ–¥–æ–º. –¢–µ—Å—Ç–∏ –Ω–∞ —Ñ–æ–∫—É—Å-–≥—Ä—É–ø—ñ –ø–æ–∫–∞–∑–∞–ª–∏ —á—É–¥–æ–≤—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ —Å–µ—Ä–µ–¥ —É—á–∞—Å–Ω–∏–∫—ñ–≤ —Ä—ñ–∑–Ω–∏—Ö –≤—ñ–∫–æ–≤–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π, —Å—Ç–∞—Ç—ñ —Ç–∞ –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—ñ. –ü—ñ—Å–ª—è –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è –ø º—è—Ç–∏ —É—Ä–æ–∫—ñ–≤, –∑ –≤–∏—à–∏–≤–∫–æ—é —Ä–æ–∑—ñ–±—Ä–∞–≤—Å—è –∫–æ–∂–µ–Ω. –¢–æ–∂ –Ω–µ —Å—É–º–Ω—ñ–≤–∞–π—Ç–µ—Å—è, —â–æ —É –≤–∞—Å —Ç–∞–∫–æ–∂ –≤–∏–π–¥–µ!',
  // },
  // {
  //   id: 4,
  //   title: '–ß–∏ –ø—ñ–¥—ñ–π–¥–µ —Ü–µ –Ω–∞–≤—á–∞–Ω–Ω—è –¥–∏—Ç–∏–Ω—ñ?',
  //   content:
  //     '–¢–∞–∫! –ó–∞ —É–º–æ–≤–∏ –Ω–∞–≥–ª—è–¥—É –¥–æ—Ä–æ—Å–ª–∏—Ö. –ù–∞–≤—á–∞–ª—å–Ω–∏–π –ø—Ä–æ—Ü–µ—Å –±—É–¥–µ —Ü—ñ–∫–∞–≤–∏–º —Ç–∞ –∑—Ä–æ–∑—É–º—ñ–ª–∏–º –Ω–∞–≤—ñ—Ç—å –¥–ª—è –º–∞–ª–µ—á—ñ. –ü—Ä–æ—Ç–µ –æ—Å–∫—ñ–ª—å–∫–∏ –≤–∏—à–∏–≤–∞–Ω–Ω—è –ø–æ–≤ º—è–∑–∞–Ω–µ –∑ —Ä–æ–±–æ—Ç–æ—é —ñ–∑ –≥–æ—Å—Ç—Ä–∏–º–∏ –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏, —è —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –ø—Ä–æ—Ö–æ–¥–∏—Ç–∏ –π–æ–≥–æ –ø—ñ–¥ –Ω–∞–≥–ª—è–¥–æ–º –¥–æ—Ä–æ—Å–ª–∏—Ö. –†–∞–∑–æ–º –≤–µ—Å–µ–ª—ñ—à–µ —Ç–∞ –±–µ–∑–ø–µ—á–Ω—ñ—à–µ! –û–ø—Ç–∏–º–∞–ª—å–Ω–∏–π –≤—ñ–∫ 12+ —Ä–æ–∫—ñ–≤',
  // },
  // {
  //   id: 5,
  //   title: '–•–æ—á—É –ø—Ä–∏–¥–±–∞—Ç–∏ —Ü–µ–π –º—ñ–Ω—ñ-–∫—É—Ä—Å —É –ø–æ–¥–∞—Ä—É–Ω–æ–∫. –Ø–∫ —Ü–µ –≤–∏–≥–ª—è–¥–∞—Ç–∏–º–µ?',
  //   content: [
  //     '–ß—É–¥–æ–≤–æ! –ù–∞–≤–∏—á–∫–∏ —ñ –∑–Ω–∞–Ω–Ω—è - –Ω–∞–π–∫—Ä–∞—â–∏–π –ø–æ–¥–∞—Ä—É–Ω–æ–∫, –±–æ –≤–æ–Ω–∏ –∑–∞–ª–∏—à–∞—Ç—å—Å—è –Ω–∞–∑–∞–≤–∂–¥–∏ –∑ –≤–∞–º–∏ü§ç –ü—Ä–∏ –Ω–∞—Å—Ç–∏—Å–∫–∞–Ω–Ω—ñ –∫–Ω–æ–ø–∫–∏ ¬´–∫—É–ø–∏—Ç–∏ –≤ –ø–æ–¥–∞—Ä—É–Ω–æ–∫¬ª, –≤–∏ –æ–ø–∏–Ω–∏—Ç–µ—Å—å –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –æ–ø–ª–∞—Ç–∏. –í–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –±—É–¥–µ –≤–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É —Ç–∞  —ñ–º–µ–π–ª –æ—Ç—Ä–∏–º—É–≤–∞—á–∞ (—è–∫—â–æ –≤–∏ –π–æ–≥–æ –∑–Ω–∞—î—Ç–µ).',
  //     <br key={`mockFreqQuestions__${9}`} />,
  //     <br key={`mockFreqQuestions__${10}`} />,
  //     '–ü—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ—ó –æ–ø–ª–∞—Ç–∏ –ª—é–¥–∏–Ω–∞ –æ—Ç—Ä–∏–º—É—î –ª–∏—Å—Ç –Ω–∞ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É –∑ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º, —â–æ –Ω–∞–¥–∞—î –¥–æ—Å—Ç—É–ø —É –Ω–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç –∑ —É—Ä–æ–∫–∞–º–∏. –û–¥–Ω–µ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è —ñ –≤—Å–µ - –º–æ–∂–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏ –≤—á–∏—Ç–∏—Å—è. –Ø–∫—â–æ –≤–∏ –ø—Ä–∏–∫—Ä—ñ–ø–ª—è–ª–∏ –ª–∏—Å—Ç—ñ–≤–∫—É, –≤–æ–Ω–∞ —Ç–∞–º —Ç–µ–∂ –±—É–¥–µ!',
  //   ],
  // },
  // {
  //   id: 6,
  //   title:
  //     '–•–æ—á—É –ø—Ä–∏–¥–±–∞—Ç–∏ –Ω–∞–≤—á–∞–Ω–Ω—è —É –ø–æ–¥–∞—Ä—É–Ω–æ–∫, –ø—Ä–æ—Ç–µ –Ω–µ –∑–Ω–∞—é —ñ–º–µ–π–ª—É –ª—é–¥–∏–Ω–∏, —è–∫—ñ–π —Ö–æ—á—É –∑—Ä–æ–±–∏—Ç–∏ –ø—Ä–∏—î–º–Ω–æ.',
  //   content: [
  //     '–ù–µ –±—ñ–¥–∞, —î —ñ–Ω—à–∏–π —à–ª—è—Ö: –≤–∏ –ø—Ä–æ–ø—É—Å–∫–∞—î—Ç–µ –≥—Ä–∞—Ñ—É –∑ —ñ–º–µ–π–ª–æ–º —ñ –ø—Ä–æ–≤–æ–¥–∏—Ç–µ –æ–ø–ª–∞—Ç—É. –ü—ñ—Å–ª—è —Ü—å–æ–≥–æ –Ω–∞ –µ–∫—Ä–∞–Ω—ñ –∑ º—è–≤–∏—Ç—å—Å—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è, —â–æ –≤–µ–¥–µ —É –±–æ—Ç –∑ –Ω–∞–≤—á–∞–Ω–Ω—è–º. –í–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –±—É–¥–µ —Å–∫–æ–ø—ñ—é–≤–∞—Ç–∏ –π–æ–≥–æ –ù–ï –í–Ü–î–ö–†–ò–í–ê–Æ–ß–ò —ñ —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ –ø–µ—Ä–µ—Å–ª–∞—Ç–∏ –æ—Ç—Ä–∏–º—É–≤–∞—á—É.',
  //     <br key={`mockFreqQuestions__${1}`} />,
  //     <br key={`mockFreqQuestions__${2}`} />,
  //     '–í–∞–∂–ª–∏–≤–∞ –ø—Ä–∏–º—ñ—Ç–∫–∞: –ø–æ—Å–∏–ª–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–µ –ª–∏—à–µ –Ω–∞ –æ–¥–∏–Ω –ø–µ—Ä–µ—Ö—ñ–¥. –¢–æ–∂ –±—É–¥—å—Ç–µ —É–≤–∞–∂–Ω—ñ, —è–∫—â–æ —Ö–æ—á–µ—Ç–µ –¥–∞—Ä—É–≤–∞—Ç–∏ –∫—É—Ä—Å. –£ —Ä–∞–∑—ñ, —è–∫—â–æ –ª—ñ–Ω–∫ –±—É–ª–æ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ –Ω–∞ –≤–∞—à–æ–º—É –ø—Ä–∏—Å—Ç—Ä–æ—ó, –≤ —ñ–Ω—à–æ—ó –ª—é–¥–∏–Ω–∏ –≤—ñ–Ω —É–∂–µ –Ω–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏–º–µ. –¶–µ–π –¥–æ—Å—Ç—É–ø –ª–∏—à–∏—Ç—å—Å—è —É –≤–∞—Å, –∞ –ø–æ–¥–∞—Ä—É–Ω–æ–∫ –¥–æ–≤–µ–¥–µ—Ç—å—Å—è –ø—Ä–∏–¥–±–∞—Ç–∏ –∑–Ω–æ–≤—É.',
  //   ],
  // },
  // {
  //   id: 7,
  //   title:
  //     '–Ø –∫—É–ø–∏–≤ –Ω–∞–≤—á–∞–Ω–Ω—è —É –ø–æ–¥–∞—Ä—É–Ω–æ–∫, –∞–ª–µ –≤–∏–ø–∞–¥–∫–æ–≤–æ —Å–∞–º –∞–∫—Ç–∏–≤—É–≤–∞–≤ –ø–æ—Å–∏–ª–∞–Ω–Ω—è. –©–æ —Ä–æ–±–∏—Ç–∏?',
  //   content: [
  //     '–£ —Ä–∞–∑—ñ –ø—Ä–∏–¥–±–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø—É –¥–æ ¬´–û–ª–∏–≤–∫–æ–≤–æ—ó –≤–∏—à–∏–≤–∞–Ω–∫–∏¬ª —É —è–∫–æ—Å—Ç—ñ –ø–æ–¥–∞—Ä—É–Ω–∫—É, –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏ –≤–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º, —â–æ –Ω–∞–¥–∞—î –¥–æ—Å—Ç—É–ø –¥–æ –Ω–∞–≤—á–∞–Ω–Ω—è. –ô–æ–≥–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ—Å–ª–∞—Ç–∏ –æ—Ç—Ä–∏–º—É–≤–∞—á—É –Ω–µ –≤—ñ–¥–∫—Ä–∏–≤–∞—é—á–∏. ',
  //     <br key={`mockFreqQuestions__${3}`} />,
  //     <br key={`mockFreqQuestions__${4}`} />,
  //     '–û—Å–∫—ñ–ª—å–∫–∏ –ª—ñ–Ω–∫ –º–æ–∂–ª–∏–≤–æ –∞–∫—Ç–∏–≤—É–≤–∞—Ç–∏ –ª–∏—à–µ –æ–¥–∏–Ω —Ä–∞–∑, –π–æ–≥–æ –Ω–µ —Å–ª—ñ–¥ –≤—ñ–¥–∫—Ä–∏–≤–∞—Ç–∏ –Ω–∞ —Å–≤–æ—î–º—É —Ç–µ–ª–µ—Ñ–æ–Ω—ñ, —è–∫—â–æ –≤–∏ –≤—Å–µ –∂ –ø–ª–∞–Ω—É—î—Ç–µ –¥–∞—Ä—É–≤–∞—Ç–∏ –∫—É—Ä—Å. –ë–æ –≤ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –ø—Ä–æ—Å—Ç–æ –Ω–µ —Å–ø—Ä–∞—Ü—é—î. ',
  //     <br key={`mockFreqQuestions__${5}`} />,
  //     <br key={`mockFreqQuestions__${6}`} />,
  //     '–Ø–∫—â–æ –∂ —Ç–∞–∫–∞ —Ö–∞–ª–µ–ø–∞ –≤—Å–µ–∂ —Å—Ç–∞–ª–∞—Å—è —ñ –≤–∏ –∑–∞–ø—É—Å—Ç–∏–ª–∏ –±–æ—Ç, –≤–æ—Ä–æ—Ç—Ç—è –Ω–µ–º–∞—î, –∫—É—Ä—Å —Ç–µ–ø–µ—Ä –≤–∞—à. –ê –ø–æ–¥–∞—Ä—É–Ω–æ–∫ –ø–æ—Ç—Ä—ñ–±–Ω–æ –±—É–¥–µ –ø—Ä–∏–¥–±–∞—Ç–∏ –∑–Ω–æ–≤—É.',
  //     <br key={`mockFreqQuestions__${7}`} />,
  //     <br key={`mockFreqQuestions__${8}`} />,
  //     '–ê–ª–µ —Å–ø–µ—Ä—à—É –Ω–∞–ø–∏—à—ñ—Ç—å –≤ —Ç–µ—Ö –ø—ñ–¥—Ç—Ä–∏–º–∫—É @–∫–æ–Ω—Ç–∞–∫—Ç, –≤–æ–Ω–∏ –¥–∞–¥—É—Ç—å –∑–Ω–∏–∂–∫—É, —â–æ–± –≤–∞–º –Ω–µ –±—É–ª–æ —Ç–∞–∫ —Å—É–º–Ω–æ —Ä–æ–±–∏—Ç–∏ –ø–æ–∫—É–ø–∫—É –≤–¥—Ä—É–≥–µ!',
  //   ],
  // },
  // {
  //   id: 8,
  //   title: '–ù–∞ —è–∫—ñ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ñ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –Ω–∞–≤—á–∞–Ω–Ω—è?',
  //   content:
  //     '–ü—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏ –º–∏ –∑–∞–ø—Ä–æ—Å–∏–º–æ –≤–∞—Å –ø–µ—Ä–µ–π—Ç–∏ –¥–æ –¢–µ–ª–µ–≥—Ä–∞–º. –ê —Ç–∞–º —É–∂–µ —á–µ–∫–∞—î –¥–æ–±—Ä–æ–∑–∏—á–ª–∏–≤–∏–π –û–ª–∏–≤–∫–æ–ë–æ—Ç. –ô–æ–≥–æ –±—É–ª–æ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ –∑ –º–µ—Ç–æ—é –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Å–ø—Ä–æ—Å—Ç–∏—Ç–∏ –ø—Ä–æ—Ü–µ—Å –Ω–∞–≤—á–∞–Ω–Ω—è. –ó–∞ –≤–∞—à–æ—é –∫–æ–º–∞–Ω–¥–æ—é –û–ª–∏–≤–∫–æ–ë–æ—Ç –Ω–µ“ë–∞–π–Ω–æ –≤–∏–¥–∞–≤–∞—Ç–∏–º–µ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –≤—ñ–¥–µ–æ —Ç–∞ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏. –ë–µ–∑ –∑–∞–π–≤–∏—Ö —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ–π —ñ –∑–∞–≤–∏—Å–∞—é—á–∏—Ö —Å–∞–π—Ç—ñ–≤. –í—Å–µ –ø—ñ–¥ —Ä—É–∫–æ—é –≤ –æ–¥–Ω–æ–º—É –º—ñ—Å—Ü—ñ.',
  // },
];

export const FreqQuestion: FC<{ className?: string }> = ({ className }) => {
  const [expandedIds, setExpandedIds] = useState<number[]>(() => {
    const defaultExpandedId
      = mockFreqQuestions.length > 0 ? mockFreqQuestions[0]?.id : null;
    return defaultExpandedId ? [defaultExpandedId] : [];
  });

  const toggleAccordion = (accordionId: number) => {
    setExpandedIds((prevExpandedIds) => {
      if (prevExpandedIds.includes(accordionId)) {
        return prevExpandedIds;
      }
      return [...prevExpandedIds, accordionId];
    });
  };

  return (
    <section id="faq" className={cn('overflow-hidden', className)}>
      <div className="container flex flex-col gap-5 py-12">
        <h2 className="h2 text-text-tugrenya-black">–ß–∞—Å—Ç—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è</h2>
        <div data-content className="flex flex-col">
          {mockFreqQuestions.map(accordionItem => (
            <Accordion
              key={`Accordion_${accordionItem.id}`}
              item={accordionItem}
              isExpanded={expandedIds.includes(accordionItem.id)}
              toggleAccordion={toggleAccordion}
            />
          ))}
        </div>
      </div>
    </section>
  );
};
